% ---- Whole Program Operations ------------------------------------------------

C-x C-c         : close emacs (only the client if using a daemon)
M-x kill-emacs  : kill the emacs daemon and all clients
C-g             : cancel
C-x g           : select minibuffer (mine)
C-x z           : repeat most recent command (then again with 'z')

undoing: see undo-tree below

% ---- Buffer ------------------------------------------------------------------

C-x C-f     : open a file (switch to existing buffer, or open new buffer)
C-x C-s     : save buffer
C-x C-w     : save buffer as different file
C-x k       : close buffer
C-x b       : switch to another buffer
C-x C-v     : find alternative file (use to reload from disk)
C-x C-b     : list of buffers & operations on them
    % TODO(norswap): how to use this effectively

M-~         : mark buffer as not modified (doesn't work on US Intl. keyboard)
C-x C-q     : toggle buffer read-only
C-c q       : toggle auto-fill mode (mine)

% ---- Windows & Frames --------------------------------------------------------

C-x 0       : close this window
C-x 1       : close other windows
C-x 2       : split window vertically
C-x 3       : split window horizontally

C-x 4 0     : close this window and kill its buffer
C-x 4 k     : close next window and kill its buffer
C-x 4 j     : close this window and kill its buffer (mine)

C-x 5 0     : close this frame

C-x o       : go to next window
C-x 5 o     : go to next frame

C-x 4 b     : open buffer in new window
C-x 4 f     : open file in new window
C-x 5 b     : open buffer in new frame
C-x 5       : open file in new frame

% ---- Moving Point & Buffer ---------------------------------------------------

M-g M-g : move to line
M-m     : move to first non blank character
C-a     : move to begin of line
C-e     : move to end of line
M-<     : move to top/beginning of buffer
M->     : move to bottom/end of buffer

C-b     : move backward one character
C-f     : move forward one character
M-b     : move backward one word            (alts: M-left, C-left)
M-f     : move forward one word             (alts: M-right, C-right)
C-p     : move backward one line
C-n     : move forward one line
C-up    : move backward one paragraph       (mine: M-p)
C-down  : move forward one paragraph        (mine: M-n)
pg up   : move backward one screen          (alt: M-v)
pg dn   : move backward one screen          (alt: C-v)
C-M-v   : move forward one screen on other window
S-C-M-v : move backward screen other window

C-l     : make current line center/top/bottom (cycle)

% ---- Selecting ---------------------------------------------------------------

C-x h   : select entire buffer
C-spc   : set mark
C-x C-x : invert mark and point

% ---- Deleting & Copying ------------------------------------------------------

C-w     : kill region
M-w     : copy region
C-k     : kill line after point
C-c w   : delete region                         (mine)
C-S-back: delete whole line including newline

back    : delete char backward
C-d     : delete char forward                   (alt: del)
M-back  : kill word backward                    (alt: M-del)
M-d     : kill word forward

% ---- Editing -----------------------------------------------------------------

M-u     : upcase word
M-l     : lowercase word
M-c     : capitalize word

C-o     : insert newline after point (unlike RET, doesn't switch to next line)
M-^     : join previous line
C-u M-^ : join next line
C-x C-t : swap this line with previous line and move point after both
C-t     : swap chars around point and move point after both
M-o M-s : center line
M-;     : with visible selection: toggle region comment
        : without: add comment at end of line or jump to start of comment
C-c C-c : comment region (C-modes + globally: mine)
C-c C-v : uncomment region (mine)

C-q <key> : quoted insert - inserts the type char litteraly

% ---- Searching ---------------------------------------------------------------

C-s     : incremental search forward (or next result)
C-r     : incremental search backward (or next result)
C-M-s   : incremental regex search (or next result)
M-e     : edit search terms
M-%     : search and replace (query-replace)
C-M-%   : search and replace regex (query-replace-regexp)


M-s o   : occur = find all occurences of regexp in current buffer

M-x multi-occur :
    same as occur, but in multiple buffers
M-x multi-occur-in-matching-buffers :
    same as occur, but in all buffers matching a regexp



% TODO(norswap): more from emacs_old

% --- Commands & Code ----------------------------------------------------------

M-x <command>       : run emacs command
M-! <command>       : run shell command
C-u M-! <command>   : insert M-! output at point
M-: <expr>          : evaluate elisp expression
C-u M-: <expr>:     : insert M-: output at point

% --- Useful Minor Modes -------------------------------------------------------

--- IDO

C-j     : use string verbatim
C-e     : edit string

--- undo-tree

C-z     : undo      (mine, alt: C-_, C-x u)
C-Z     : redo      (mine, alt: M-_)
C-x u   : visualize undo tree
    p,n : previous/next (top/down)
    b,f : previous/next branch (on parent)
      d : diff mode
      t : timestamps

% --- Display ------------------------------------------------------------------

C-x C-+ : increase font size
C-x C-- : decrease font size

C-x n n : narrow to region
C-x n w : widen to whole buffer

% --- Help ---------------------------------------------------------------------

C-h m : view active modes
C-h l : command history

% --- Abbrevs ------------------------------------------------------------------

C-x a g     : define abbrev for word before point (add global)
C-x a l     : idem, major-mode specific (add local)
C-x a i g   : define expansion for abbrev before point (add inverse global)
C-x a i l   : idem, major-mode specific (add inverse local)
C-x a e     : expand abbrev before point

M-x list-abbrevs
M-x edit-abbrevs
M-x write-abbrev-file
M-x read-abbrev-file

% --- Orgmode ------------------------------------------------------------------

TAB         : cycle expansion modes
S-TAB       : cycle expansion modes (whole file)
C-c a       : agenda commands (own)

C-c (C-)f   : next item same level (without C: own)
C-c (C-)b   : prev item same level (without C: own)
C-c (C-)u   : upper level (without C: own)

C-c C-d     : toggle checkboxes (- []) & more (org-mode-ctrl-c-ctrl-c)

M-right/left    : shift subtree level
M-up/down       : reorder subtrees

C-c C-x C-a     : archive entry
C-c C-x C-s     : archive subtree

C-c C-w         : refile entry
C-c C-z         : take logbook note

C-c C-l         : edit link
C-c l           : org-store-link
C-c C-o         : follow link
C-c &           : back to previous location(s)

-- % Unused % --

C-c C-x ;       : start timer
C-c C-x 0       : start a relative timer
    start w/ offset : C-u C-c C-x 0
    output time     : C-c C-x .
    pause/restart   : C-c C-x ,
    stop timer      : C-u C-c C-x ,

% --- Code ---------------------------------------------------------------------

M-x electric-indent-mode    : toggle automatic indents

% --- Latex --------------------------------------------------------------------

C-c C-n                     : next tex command (mine, originally C-c C-c)
C-c C-a                     : run all tex commands

% --- Getting Help -------------------------------------------------------------

% TODO(norswap): more from emacs_old

% --- Other --------------------------------------------------------------------

% NOTE(norswap): be strict & conservative about what is included here

M-x epa-encrypt-file: encrypt a file
    (creating a file with .gpg extension appended)
    I think this relies on externally installed GPG keychain.

M-x diff: diff new and old file
    you should leave the directly on if you want to use the default!

M-x diff-buffer-with-file

C-x RET f : encoding/newlines for saving file (e.g. dos/unix/utf-8-unix)

% ------------------------------------------------------------------------------
